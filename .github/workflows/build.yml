name: Build
on:
  # push:
  #   branches:
  #     - '**'
  #   paths-ignore:
  #     - 'LICENSE'
  #     - '**.md'
  # pull_request:
  # release:
  #   types: [created]
  workflow_dispatch:

permissions:
  write-all

jobs:
  build-mac:
    name: Build for macOS (Universal)
    runs-on: macos-13
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
      - name: Install dependencies
        run: |
          brew install graphicsmagick imagemagick
      - name: Build for macOS (Universal)
        shell: bash
        run: |
          xcodebuild -project 'InjectGUI.xcodeproj' -scheme 'InjectGUI' -configuration 'Release' -destination 'platform=macOS' build  -derivedDataPath 'build' -arch x86_64 -arch arm64
      # - name: Create DMG
      #   shell: bash
      #   run: |
      #     hdiutil create -volname "InjectGUI" -srcfolder "build/Build/Products/Release/InjectGUI.app" -ov -format UDZO "InjectGUI.dmg"
      - name: Create DMG
        run: |
          npm install --global create-dmg
          create-dmg 'build/Build/Products/Release/InjectGUI.app' --overwrite --dmg-title='InjectGUI'
      - name: Upload DMG Artifact
        uses: actions/upload-artifact@v4
        with:
          name: InjectGUI-Universal
          path: InjectGUI.dmg
      - name: Upload DMG to GitHub Release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: InjectGUI.dmg
          asset_name: InjectGUI.dmg
          asset_content_type: application/x-apple-diskimage